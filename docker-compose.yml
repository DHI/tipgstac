version: '3'

services:
  app:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.gunicorn
    environment:
      - HOST=0.0.0.0
      - PORT=8081
      - PYTHONWARNINGS=ignore
      - POSTGRES_USER=username
      - POSTGRES_PASS=password
      - POSTGRES_DBNAME=postgis
      - POSTGRES_HOST=database
      - POSTGRES_PORT=5432
      - DEBUG=TRUE
    ports:
      - "${MY_DOCKER_IP:-127.0.0.1}:8081:8081"
    depends_on:
    - database
    command:
      bash -c "bash /tmp/scripts/wait-for-it.sh database:5432 --timeout=30 && /start.sh"
    volumes:
      - ./dockerfiles/scripts:/tmp/scripts

  app-uvicorn:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.uvicorn
    environment:
      - HOST=0.0.0.0
      - PORT=8081
      - WEB_CONCURRENCY=1
      - PYTHONWARNINGS=ignore
      - POSTGRES_USER=username
      - POSTGRES_PASS=password
      - POSTGRES_DBNAME=postgis
      - POSTGRES_HOST=database
      - POSTGRES_PORT=5432
      - DEBUG=TRUE
    ports:
      - "${MY_DOCKER_IP:-127.0.0.1}:8081:8081"
    depends_on:
    - database
    command:
      bash -c "bash /tmp/scripts/wait-for-it.sh database:5432 --timeout=30 && uvicorn tipg.main:app --host 0.0.0.0 --port 8081"
    volumes:
      - ./dockerfiles/scripts:/tmp/scripts

  # After launching the database, user might want to enable the `context` extension in pgstac
  # INSERT INTO pgstac_settings (name, value)
  # VALUES ('context', 'on')
  # ON CONFLICT ON CONSTRAINT pgstac_settings_pkey DO UPDATE SET value = excluded.value;
  database:
    image: ghcr.io/stac-utils/pgstac:v0.8.4
    platform: linux/amd64
    environment:
      - POSTGRES_USER=username
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgis
      - PGUSER=username
      - PGPASSWORD=password
      - PGDATABASE=postgis
    ports:
      - "${MY_DOCKER_IP:-127.0.0.1}:5439:5432"
    command: postgres -N 500
    volumes:
      - ./.pgdata:/var/lib/postgresql/data
